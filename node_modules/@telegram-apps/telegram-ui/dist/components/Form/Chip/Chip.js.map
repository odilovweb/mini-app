{"version":3,"sources":["../../../../src/components/Form/Chip/Chip.tsx"],"sourcesContent":["'use client';\n\nimport { AllHTMLAttributes, ReactNode } from 'react';\nimport styles from './Chip.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\n\nexport interface ChipProps extends AllHTMLAttributes<HTMLDivElement> {\n  /** Defines the visual style of the chip, affecting its background, border, and shadow. */\n  mode?: 'elevated' | 'mono' | 'outline';\n  /** Content or component to be placed before the main text, typically an icon or avatar. */\n  before?: ReactNode;\n  /** Content or component to be placed after the main text, such as an icon indicating an action. */\n  after?: ReactNode;\n  /** The main text content of the chip. */\n  children?: ReactNode;\n}\n\nconst modeStyles = {\n  elevated: styles['wrapper--elevated'],\n  mono: styles['wrapper--mono'],\n  outline: styles['wrapper--outline'],\n};\n\n/**\n * Renders a compact element representing an input, attribute, or action. Chips can include icons, text, or both,\n * and are used to trigger actions, input information, or represent a complex piece of information in a compact form.\n */\nexport const Chip = ({\n  mode = 'elevated',\n  before,\n  after,\n  className,\n  children,\n  ...restProps\n}: ChipProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component=\"div\"\n      interactiveAnimation=\"opacity\"\n      className={classNames(\n        styles.wrapper,\n        modeStyles[mode],\n        className,\n      )}\n      {...restProps}\n    >\n      {hasReactNode(before) && (\n        <div className={styles.before}>\n          {before}\n        </div>\n      )}\n      <Subheadline\n        className={styles.text}\n        level={platform === 'ios' ? '2' : '1'}\n        weight=\"2\"\n      >\n        {children}\n      </Subheadline>\n      {hasReactNode(after) && (\n        <div className={styles.after}>\n          {after}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"names":["classNames","hasReactNode","usePlatform","Tappable","Subheadline","modeStyles","elevated","mono","outline","Chip","mode","before","after","className","children","restProps","platform","Component","interactiveAnimation","div","level","weight"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ,8BAAqB;AAChD,SAASC,YAAY,QAAQ,8BAAqB;AAClD,SAASC,WAAW,QAAQ,6BAAoB;AAEhD,SAASC,QAAQ,QAAQ,kCAAuC;AAChE,SAASC,WAAW,QAAQ,2CAAgD;AAa5E,MAAMC,aAAa;IACjBC,QAAQ;IACRC,IAAI;IACJC,OAAO;AACT;AAEA;;;CAGC,GACD,OAAO,MAAMC,OAAO;QAAC,EACnBC,OAAO,UAAU,EACjBC,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,QAAQ,EAEE,WADPC;QALHL;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWd;IAEjB,qBACE,MAACC;QACCc,WAAU;QACVC,sBAAqB;QACrBL,WAAWb,oCAETK,UAAU,CAACK,KAAK,EAChBG;OAEEE;;YAEHd,aAAaU,yBACZ,KAACQ;gBAAIN,SAAS;0BACXF;;0BAGL,KAACP;gBACCS,SAAS;gBACTO,OAAOJ,aAAa,QAAQ,MAAM;gBAClCK,QAAO;0BAENP;;YAEFb,aAAaW,wBACZ,KAACO;gBAAIN,SAAS;0BACXD;;;;AAKX,EAAE"}